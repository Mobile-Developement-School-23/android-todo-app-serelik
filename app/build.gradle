plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.21'
    id 'org.jlleitschuh.gradle.ktlint' version '11.5.0'
}

android {
    namespace 'com.serelik.todoapp'
    compileSdk 33


    defaultConfig {
        applicationId "com.serelik.todoapp"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [YANDEX_CLIENT_ID: "0d0970774e284fa8ba9ff70b6b06479a"]
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17

    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.6"
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding = true
        compose = true
    }

    dependencies {

        implementation 'androidx.core:core-ktx:1.10.1'
        implementation 'androidx.appcompat:appcompat:1.6.1'
        implementation 'com.google.android.material:material:1.9.0'
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:"
        implementation "androidx.fragment:fragment-ktx:1.6.0"
        implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"

        testImplementation 'junit:junit:4.13.2'
        androidTestImplementation 'androidx.test.ext:junit:1.1.5'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

        implementation 'com.github.kirich1409:viewbindingpropertydelegate-noreflection:1.5.9'

        def room_version = "2.5.2"
        implementation "androidx.room:room-runtime:$room_version"
        kapt "androidx.room:room-compiler:$room_version"
        implementation "androidx.room:room-ktx:$room_version"
        testImplementation "androidx.room:room-testing:$room_version"

        implementation "com.yandex.android:authsdk:2.5.1"

        implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
        implementation 'com.squareup.retrofit2:retrofit:2.9.0'
        implementation 'com.squareup.okhttp3:okhttp:4.10.0'
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0"
        implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"

        implementation "androidx.work:work-runtime-ktx:2.8.1"

        implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

        implementation 'com.google.dagger:dagger:2.44.2'
        kapt 'com.google.dagger:dagger-compiler:2.44.2'

        def composeBom = platform("androidx.compose:compose-bom:2023.05.01")
        implementation(composeBom)
        androidTestImplementation(composeBom)

        // Choose one of the following:
        // Material Design 3
        implementation("androidx.compose.material3:material3")
        // or Material Design 2
        implementation("androidx.compose.material:material")
        // or skip Material Design and build directly on top of foundational components
        implementation("androidx.compose.foundation:foundation")
        // or only import the main APIs for the underlying toolkit systems,
        // such as input and measurement/layout
        implementation("androidx.compose.ui:ui")

        // Android Studio Preview support
        implementation("androidx.compose.ui:ui-tooling-preview")
        debugImplementation("androidx.compose.ui:ui-tooling")

        // UI Tests
        androidTestImplementation("androidx.compose.ui:ui-test-junit4")
        debugImplementation("androidx.compose.ui:ui-test-manifest")

        // Optional - Included automatically by material, only add when you need
        // the icons but not the material library (e.g. when using Material3 or a
        // custom design system based on Foundation)
        implementation("androidx.compose.material:material-icons-core")
        // Optional - Add full set of material icons
        implementation("androidx.compose.material:material-icons-extended")
        // Optional - Add window size utils
        implementation("androidx.compose.material3:material3-window-size-class")

        // Optional - Integration with activities
        implementation("androidx.activity:activity-compose:1.7.2")
        // Optional - Integration with ViewModels
        implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
        // Optional - Integration with LiveData
        implementation("androidx.compose.runtime:runtime-livedata")
    }
}
